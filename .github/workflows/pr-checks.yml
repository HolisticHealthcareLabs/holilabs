name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # =============================================================================
  # PR SIZE CHECK
  # =============================================================================
  size-check:
    name: Check PR Size
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Check PR size
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const additions = pr.additions;
            const deletions = pr.deletions;
            const total = additions + deletions;

            console.log(`PR has ${additions} additions and ${deletions} deletions (${total} total)`);

            if (total > 1000) {
              core.warning(`‚ö†Ô∏è This PR is quite large (${total} lines changed). Consider breaking it into smaller PRs for easier review.`);
            }

            if (total > 2000) {
              core.setFailed(`‚ùå This PR is too large (${total} lines changed). Please break it into smaller, focused PRs.`);
            }

  # =============================================================================
  # CONVENTIONAL COMMITS CHECK
  # =============================================================================
  commit-check:
    name: Check Commit Messages
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check conventional commits
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: '.commitlintrc.json'
        continue-on-error: true

  # =============================================================================
  # DEPENDENCY REVIEW
  # =============================================================================
  dependency-review:
    name: Review Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0

  # =============================================================================
  # CODE QUALITY
  # =============================================================================
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prettier check
        run: pnpm format:check
        continue-on-error: true

      - name: Check for TODO/FIXME comments
        run: |
          if git grep -n "TODO\|FIXME" -- '*.ts' '*.tsx' '*.js' '*.jsx'; then
            echo "‚ö†Ô∏è Found TODO/FIXME comments in code"
          fi
        continue-on-error: true

      - name: Check for console.log statements
        run: |
          if git grep -n "console\.log" -- 'apps/*/src/**/*.ts' 'apps/*/src/**/*.tsx'; then
            echo "‚ö†Ô∏è Found console.log statements - consider using proper logging"
          fi
        continue-on-error: true

  # =============================================================================
  # LIGHTHOUSE CI
  # =============================================================================
  lighthouse:
    name: Lighthouse Performance Check
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application
        run: pnpm --filter web build
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/portal/login
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # =============================================================================
  # BUNDLE SIZE CHECK
  # =============================================================================
  bundle-size:
    name: Check Bundle Size
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and analyze bundle
        run: pnpm --filter web build
        env:
          ANALYZE: true
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v3
        with:
          name: bundle-analysis
          path: apps/web/.next/analyze/
          retention-days: 7

  # =============================================================================
  # ACCESSIBILITY CHECK
  # =============================================================================
  accessibility:
    name: Accessibility Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run axe accessibility tests
        run: pnpm test:a11y
        continue-on-error: true

  # =============================================================================
  # PR SUMMARY
  # =============================================================================
  summary:
    name: PR Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [size-check, code-quality, dependency-review]
    if: always()

    steps:
      - name: Post PR Summary
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = `
            ## üîç PR Check Summary

            **Branch:** \`${pr.head.ref}\` ‚Üí \`${pr.base.ref}\`
            **Author:** @${pr.user.login}
            **Changes:** +${pr.additions} -${pr.deletions}

            ### ‚úÖ Checks Completed
            - Size check
            - Code quality
            - Dependency review
            - Bundle analysis

            ### üìù Next Steps
            1. Ensure all checks pass
            2. Request reviews from team members
            3. Address any feedback
            4. Merge when approved

            *This PR will be automatically deployed to staging once merged to \`develop\`*
            `;

            github.rest.issues.createComment({
              issue_number: pr.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
